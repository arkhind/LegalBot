#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞
"""

import os
import re
from dotenv import load_dotenv

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç .env —Ñ–∞–π–ª –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
    load_dotenv()
    
    # –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars = {
        'BOT_TOKEN': '–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞',
        'OPENROUTER_API_KEY': '–ö–ª—é—á API OpenRouter',
        'TELEGRAM_API_ID': 'API ID Telegram',
        'TELEGRAM_API_HASH': 'API Hash Telegram',
        'TELEGRAM_PHONE': '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
        'LAWYER_TELEGRAM_ID': 'ID —é—Ä–∏—Å—Ç–∞ –≤ Telegram',
        'YOOKASSA_SHOP_ID': 'ID –º–∞–≥–∞–∑–∏–Ω–∞ –ÆKassa',
        'YOOKASSA_SECRET_KEY': '–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –ÆKassa'
    }
    
    # –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_vars = {
        'DATABASE_URL': 'URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        'PGHOST': '–•–æ—Å—Ç PostgreSQL',
        'PGDATABASE': '–ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        'PGUSER': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å PostgreSQL',
        'PGPASSWORD': '–ü–∞—Ä–æ–ª—å PostgreSQL'
    }
    
    issues = []
    warnings = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    for var, description in required_vars.items():
        value = os.getenv(var)
        if not value or value.startswith('your_') or value == '0':
            issues.append(f"‚ùå {var}: {description} - –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        elif var == 'LAWYER_TELEGRAM_ID' and not value.isdigit():
            issues.append(f"‚ùå {var}: {description} - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø–æ–ª—É—á–µ–Ω–æ: {value}")
        else:
            print(f"‚úÖ {var}: {description} - –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database_url = os.getenv('DATABASE_URL')
    if database_url and (database_url.startswith('postgresql://') or database_url.startswith('your_')):
        if database_url.startswith('your_'):
            issues.append(f"‚ùå DATABASE_URL: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        else:
            print(f"‚úÖ DATABASE_URL: –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ PostgreSQL
        pg_host = os.getenv('PGHOST')
        pg_db = os.getenv('PGDATABASE')
        pg_user = os.getenv('PGUSER')
        pg_pass = os.getenv('PGPASSWORD')
        
        if not all([pg_host, pg_db, pg_user, pg_pass]):
            issues.append(f"‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ PostgreSQL: –Ω–µ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        else:
            print(f"‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ PostgreSQL: –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º LAWYER_CLIENT_ENABLED
    lawyer_enabled = os.getenv('LAWYER_CLIENT_ENABLED', 'false').lower()
    if lawyer_enabled not in ['true', 'false']:
        warnings.append(f"‚ö†Ô∏è LAWYER_CLIENT_ENABLED: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'true' –∏–ª–∏ 'false', –ø–æ–ª—É—á–µ–Ω–æ: {lawyer_enabled}")
    else:
        print(f"‚úÖ LAWYER_CLIENT_ENABLED: {lawyer_enabled}")
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "="*50)
    
    if issues:
        print("‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        for issue in issues:
            print(f"  {issue}")
        print("\nüîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("  nano .env")
        print("  # –ò –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ 'your_*' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
    else:
        print("‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    
    if warnings:
        print("\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
        for warning in warnings:
            print(f"  {warning}")
    
    return len(issues) == 0

def create_env_template():
    """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞"""
    template = """# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
BOT_TOKEN=your_telegram_bot_token_here
OPENROUTER_API_KEY=your_openrouter_api_key_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç —é—Ä–∏—Å—Ç–∞
TELEGRAM_API_ID=your_api_id_here
TELEGRAM_API_HASH=your_api_hash_here
TELEGRAM_PHONE=+7XXXXXXXXXX

# –í–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ —é—Ä–∏—Å—Ç–∞
LAWYER_CLIENT_ENABLED=true

# ID —é—Ä–∏—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º)
LAWYER_TELEGRAM_ID=123456789

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ÆKassa
YOOKASSA_SHOP_ID=your_shop_id_here
YOOKASSA_SECRET_KEY=your_secret_key_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–±)
# –°–ø–æ—Å–æ–± 1: DATABASE_URL (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
DATABASE_URL=postgresql://username:password@localhost:5432/database_name

# –°–ø–æ—Å–æ–± 2: –û—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# PGHOST=localhost
# PGDATABASE=legal_bot
# PGUSER=legal_bot_user
# PGPASSWORD=your_password
# PGSSLMODE=require
# PGCHANNELBINDING=prefer
"""
    
    with open('.env.template', 'w', encoding='utf-8') as f:
        f.write(template)
    
    print("üìù –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω .env.template")
    print("üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏")

if __name__ == "__main__":
    if not os.path.exists('.env'):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìù –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω...")
        create_env_template()
        print("\nüîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. cp .env.template .env")
        print("2. nano .env")
        print("3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è")
        print("4. python fix_env.py")
    else:
        is_valid = check_env_file()
        if not is_valid:
            print("\nüí° –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
            print("  python fix_env.py --template")
